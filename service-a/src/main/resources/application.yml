spring:
  application:
    name: ServiceA

server:
  port: 9090

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
      health:
        show-details: always

resilience4j:
  circuitbreaker:
    instances:
      serviceA:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      serviceA:
        maxRetryAttempts: 3
        waitDuration: 10s #ms

# 5 request will be in service for 5s and after 3s again it will allow to serve another 5 req for 5s.
  ratelimiter:
    instances:
      serviceA:
        registerHealthIndicator: false
        limitForPeriod: 5
        limitRefreshPeriod: 5s
        timeoutDuration: 3s

